name: Publish Modpack

on:
  push:
    branches:
      - master

jobs:
  publish:
    runs-on: ubuntu-latest
    if: "contains(github.event.head_commit.message, 'release:')"
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Download packwiz
        run: |
          wget -O packwiz.zip https://nightly.link/packwiz/packwiz/workflows/go/main/Linux%2064-bit%20x86.zip
          unzip packwiz.zip
          chmod +x packwiz
      
      - name: Export modpack
        run: ./packwiz modrinth export

      - name: Parse modpack version
        uses: SebRollen/toml-action@v1.2.0
        id: pack_version
        with:
          file: pack.toml
          field: version

      - name: Parse Minecraft version
        uses: SebRollen/toml-action@v1.2.0
        id: pack_minecraft
        with:
          file: pack.toml
          field: versions.minecraft

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: Vanilla Reimagined
          path: "Vanilla Reimagined-*.mrpack"

      - name: Publish to Modrinth
        uses: Kira-NT/mc-publish@v3.3.0
        with:
          modrinth-id: WhCmeZLu
          modrinth-token: ${{ secrets.MODRINTH_TOKEN }}
          modrinth-featured: true
          modrinth-unfeature-mode: subset
          modrinth-version: ${{ steps.pack_version.outputs.value }}
          modrinth-version-type: release

          name: 'Vanilla Reimagined ${{ steps.pack_version.outputs.value }}'
          files: '*.mrpack'
          loaders: |
            fabric
          game-versions: |
            ${{ steps.pack_minecraft.outputs.value }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2.4.1
        with:
          files: "Vanilla Reimagined-*.mrpack"
          name: 'Vanilla Reimagined ${{ steps.pack_version.outputs.value }}'
          tag_name: ${{ steps.pack_version.outputs.value }}
          generate_release_notes: true
          token: ${{ secrets.GITHUB_TOKEN }}